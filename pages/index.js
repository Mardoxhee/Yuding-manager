import Head from "next/head";
import styles from "./ind.module.scss";
import { Col, Row } from "reactstrap";
import authHeader from "./../src/services/authHeader";
import { useState, useEffect } from "react";
import Router from "next/router";
import { useRouter } from "next/router";
// import SalesChart from "../src/components/dashboard/SalesChart";
import Feeds from "../src/components/dashboard/Feeds";
import ReservationsTable from "../src/components/dashboard/ProjectTable";
import TopCards from "../src/components/dashboard/TopCards";
import Image from "next/image";

export default function Home() {
  const [restaurantObject, setRestaurantObject] = useState({});
  const [restaurantId, setRestaurantId] = useState("");
  // const [reservations, setReservations] = useState([]);

  const reservationsArray = [];
  const infosArray = [];
  const restoId = [];

  // const router = useRouter();

  // const {
  //   query: { userInfo },
  // } = router;
  // const dataFromUrl = userInfo;

  // const getToken = async () => {
  //   userInfo
  //     ? localStorage.setItem("user", dataFromUrl)
  //     : console.log("nothing");
  // };

  const getRestaurantInfo = async () => {
    try {
      const url = "https://yuding-platform.onrender.com/restaurants/by-account";
      const requestoptions = {
        method: "GET",
        headers: authHeader(),
      };
      const response = await fetch(url, requestoptions);
      if (response.status === 401) {
        // Router.push({
        //   pathname: "http://localhost:8081/Login",
        // });
        console.log("token invalid");
      } else {
        const jsonData = await response.json();
        const taille = jsonData.restaurant.length;
        if (taille !== 0) {
          const restaurantData = jsonData.restaurant[0];
          setRestaurantObject(restaurantData);
          infosArray.push(restaurantData);
          const idResto = restaurantData._id;
          setRestaurantId(idResto);
          restoId.push(idResto);
        } else if (taille === 0) {
          Router.push({
            pathname: "https://yuding-client.vercel.app/CreationRestaurant",
          });
        }
      }
    } catch (error) {
      console.log({ error });
    }
  };

  const getReservations = async () => {
    try {
      const url = `https://yuding-platform.onrender.com/by-account?restaurant=${
        restoId ? restoId[0] : ""
      }`;
      const requestoptions = {
        method: "GET",
        headers: authHeader(),
      };
      const response = await fetch(url, requestoptions);
      console.log("response", response);
      const datawithreservation = await response.json();
      const reservationsData = datawithreservation.data.reservations;
      // setReservations(reservationsData);
      reservationsArray.push(reservationsData);
    } catch (error) {
      console.log({ error });
    }
  };
  useEffect(() => {
    // getToken();
    getRestaurantInfo();
    getReservations();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [restaurantId]);

  return (
    <div>
      <Head>
        <title>yuding-manager</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <Row>
          <div className={styles.bannerContainer}>
            <div className={styles.textSide}>
              <h1>Bienvenue au restaurant {infosArray[0].restaurantName}</h1>
              <p>Administrez vos activité depuis cette interface</p>
            </div>
            <div className={styles.imageSide}></div>
          </div>
          <Col sm="6" lg="3">
            <TopCards
              bg="bg-light-success text-success"
              title="Profit"
              subtitle="Réservations en cours"
              earning={
                reservationsArray
                  ? JSON.stringify(reservationsArray.length)
                  : "0"
              }
              icon="bi bi-wallet"
            />
          </Col>
          <Col sm="6" lg="3"></Col>
        </Row>

        <Row>
          <Col sm="12" lg="6" xl="7" xxl="12">
            <ReservationsTable reservations={reservationsArray} />
          </Col>
          {/* <Col sm="12" lg="6" xl="5" xxl="4">
            <Feeds />
          </Col> */}
        </Row>

        <Row>
          <Col lg="12" sm="12"></Col>
        </Row>
      </div>
    </div>
  );
}
